<mah:MetroWindow x:Class="Generator.Client.Desktop.Views.ConfigurationEditWindow"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 xmlns:local="clr-namespace:Generator.Client.Desktop"
                 xmlns:system="clr-namespace:System;assembly=mscorlib"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:controls="clr-namespace:Generator.Client.Desktop.Controls"
                 xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                 xmlns:utility="clr-namespace:Generator.Client.Desktop.Utility"
                 xmlns:Interactions="http://schemas.microsoft.com/xaml/behaviors"
                 xmlns:viewModels="clr-namespace:Generator.Shared.ViewModels;assembly=Generator.Shared"
                 mc:Ignorable="d"
                 d:DataContext="{d:DesignInstance viewModels:ConfigurationViewModel}"
                 SizeToContent="WidthAndHeight"
                 x:Name="Self"
                 Title="Configuration editor" Height="450" Width="800">
	<mah:MetroWindow.Resources>
		<GridLength x:Key="SmallGridLength">200</GridLength>
		<GridLength x:Key="GridPaddingLength">10</GridLength>
	</mah:MetroWindow.Resources>
	<Interactions:Interaction.Behaviors>
		<utility:KeepWindowInScreenBehavior/>
	</Interactions:Interaction.Behaviors>
	<Window.InputBindings>
		<KeyBinding Key="S" Modifiers="Control" Command="{Binding Path=CommitChangesCommand}" />
		<KeyBinding Key="OemPlus" Command="{Binding AddOutputFolderCommand}" />
	</Window.InputBindings>
	<DockPanel>
		<Border Background="{StaticResource AccentColorBrush}" DockPanel.Dock="Bottom" Padding="5">
			<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
				<Button Content="Save" Command="{Binding Path=CommitChangesCommand}" Padding="5" Margin="0,0,5,0" />
				<Button Content="Discard" Command="{Binding Path=UndoChangesCommand}" Padding="5" />
			</StackPanel>
		</Border>
		<ScrollViewer Padding="10" VerticalScrollBarVisibility="Auto">
			<StackPanel>
				<GroupBox Header="Errors" Visibility="{Binding Path=HasErrors, Converter={StaticResource BooleanToVisibilityConverter}}">
					<ItemsControl ItemsSource="{Binding Path=ValidationErrors}"></ItemsControl>
				</GroupBox>
				<GroupBox Header="Template data">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="{StaticResource GridPaddingLength}" />
							<ColumnDefinition Width="{StaticResource SmallGridLength}" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<controls:LabeledControl LabelText="Configuration name:" Grid.Row="0" Grid.Column="0">
							<TextBox Text="{Binding Path=ConfigurationName, UpdateSourceTrigger=PropertyChanged}" />
						</controls:LabeledControl>
						<controls:LabeledControl LabelText="Language:" Grid.Row="0" Grid.Column="2">
							<ComboBox SelectedValue="{Binding Path=CodeLanguage}" SelectedValuePath="Content">
								<ComboBoxItem Content="CSharp" />
								<ComboBoxItem Content="VisualBasic" />
							</ComboBox>
						</controls:LabeledControl>

						<controls:LabeledControl LabelText="Suggested namespace:" Grid.Row="1" Grid.Column="0">
							<TextBox Text="{Binding Path=DefaultName, UpdateSourceTrigger=PropertyChanged}" />
						</controls:LabeledControl>
						<controls:LabeledControl LabelText="Display name (VS):" Grid.Row="1" Grid.Column="2">
							<TextBox Text="{Binding Path=Name, UpdateSourceTrigger=PropertyChanged}" />
						</controls:LabeledControl>

						<controls:LabeledControl LabelText="Description:" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
							<TextBox Text="{Binding Path=Description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="WrapWithOverflow"
							         AcceptsReturn="True" />
						</controls:LabeledControl>

						<Grid ColumnSpan="3" Grid.Row="3">
							<Grid.Resources>
								<DataTemplate DataType="{x:Type viewModels:VisualStudioIconViewModel}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="{StaticResource GridPaddingLength}"/>
											<ColumnDefinition Width="{StaticResource SmallGridLength}"/>
										</Grid.ColumnDefinitions>
										<controls:LabeledControl LabelText="Icon package:" Grid.Column="0">
											<TextBox Text="{Binding Path=Package, UpdateSourceTrigger=PropertyChanged}" />
										</controls:LabeledControl>
										<controls:LabeledControl LabelText="Icon id:" Grid.Column="2">
											<TextBox Text="{Binding Path=Id, UpdateSourceTrigger=PropertyChanged}" />
										</controls:LabeledControl>
									</Grid>
								</DataTemplate>
								<DataTemplate DataType="{x:Type viewModels:AbsolutePathIconViewModel}">
									<DockPanel VerticalAlignment="Bottom">
										<Button Margin="5,0,0,0" Content="..." Command="{Binding Path=PickImageCommand}" DockPanel.Dock="Right" VerticalAlignment="Bottom"/>
										<controls:LabeledControl LabelText="Icon path">
											<TextBox Text="{Binding Path=AbsolutePath}" Background="LightGray" IsReadOnly="True"/>
										</controls:LabeledControl>
									</DockPanel>
								</DataTemplate>
								<DataTemplate DataType="{x:Type viewModels:IconManageViewModel}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="{StaticResource SmallGridLength}" />
											<ColumnDefinition Width="{StaticResource GridPaddingLength}" />
											<ColumnDefinition Width="*" />
										</Grid.ColumnDefinitions>
										<controls:LabeledControl LabelText="Icon type:" Grid.Column="0">
											<ComboBox SelectedValue="{Binding Path=Type}" SelectedValuePath="Tag" >
												<ComboBoxItem Content="Visual Studio" Tag="{x:Static viewModels:IconType.VisualStudioIcon}"/>
											</ComboBox>
										</controls:LabeledControl>
										<ContentPresenter Content="{Binding Path=CurrentIcon}" Grid.Column="2"/>
									</Grid>
								</DataTemplate>
							</Grid.Resources>
							<ContentPresenter Content="{Binding Path=Icon}"/>
						</Grid>

						<controls:LabeledControl LabelText="Solution path:" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3">
							<DockPanel>
								<Button DockPanel.Dock="Right" Margin="5,0,0,0" Content="..." Padding="5,0"
								        Command="{Binding Path=SelectSolutionCommand}" />
								<TextBox Text="{Binding Path=SolutionPath, ValidatesOnNotifyDataErrors=True}" IsReadOnly="True"
								         Background="LightGray" />
							</DockPanel>
						</controls:LabeledControl>
					</Grid>
				</GroupBox>
				<GroupBox Header="Deployment settings">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="10" />
							<ColumnDefinition Width="200" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<GroupBox Header="output folders:" Grid.Row="0" Grid.Column="0" Style="{StaticResource GroupBoxContrastStyle}">
							<DockPanel>
								<Button DockPanel.Dock="Right" Margin="5,0,0,0" Content="+" Padding="5,0" VerticalAlignment="Top"
								        Command="{Binding Path=AddOutputFolderCommand}" />
								<ListView 
									IsSynchronizedWithCurrentItem="True"
									ItemsSource="{Binding Path=OutputFolders}">
									<ListView.Template>
										<ControlTemplate>
											<ItemsPresenter/>
										</ControlTemplate>
									</ListView.Template>
									<ListView.InputBindings>
										<KeyBinding Key="Delete" Command="{Binding RemoveOutputFolderCommand}"
										            CommandParameter="{Binding Path=OutputFolders/}" />
									</ListView.InputBindings>
									<ListView.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Path=.}" />
										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</DockPanel>
						</GroupBox>
						<Border Grid.Row="0" Grid.Column="2" Padding="0,0,0,10">
							<StackPanel >
								<controls:LabeledControl LabelText="Provide default name:">
									<CheckBox IsChecked="{Binding Path=ProvideDefaultName, UpdateSourceTrigger=PropertyChanged}" />
								</controls:LabeledControl>
								<controls:LabeledControl LabelText="CreateInPlace:">
									<CheckBox IsChecked="{Binding Path=CreateInPlace, UpdateSourceTrigger=PropertyChanged}" />
								</controls:LabeledControl>
								<controls:LabeledControl LabelText="CreateNewFolder:">
									<CheckBox IsChecked="{Binding Path=CreateNewFolder, UpdateSourceTrigger=PropertyChanged}" />
								</controls:LabeledControl>
								<controls:LabeledControl LabelText="Zip contents?:">
									<CheckBox IsChecked="{Binding Path=ZipContents, UpdateSourceTrigger=PropertyChanged}" />
								</controls:LabeledControl>
							</StackPanel>
						</Border>

						<GroupBox Header="File filter:" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource GroupBoxContrastStyle}">
							<StackPanel>
								<TextBox
									mah:TextBoxHelper.UseFloatingWatermark="True" 
								         mah:TextBoxHelper.Watermark="File blacklist">
									<TextBox.Text>
										<Binding Path="FileCopyBlacklist" UpdateSourceTrigger="PropertyChanged">
											<Binding.ValidationRules>
												<NotifyDataErrorValidationRule />
											</Binding.ValidationRules>
										</Binding>
									</TextBox.Text>
								</TextBox>
							</StackPanel>
						</GroupBox>

						<GroupBox Header="Artifacts:" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource GroupBoxContrastStyle}">
							<StackPanel>
								<TextBox Text="{Binding Path=ArtifactName, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True, NotifyOnValidationError=True}"
								         mah:TextBoxHelper.UseFloatingWatermark="True" 
								         mah:TextBoxHelper.Watermark="Artifact name:">
								</TextBox>
							</StackPanel>
						</GroupBox>
					</Grid>

				</GroupBox>
				<GroupBox Header="Solution layout">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="10" />
							<ColumnDefinition Width="200" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>

						<GroupBox Header="Startup project:" Style="{StaticResource GroupBoxContrastStyle}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
							<ComboBox SelectedValue="{Binding Path=PrimaryProject}" ItemsSource="{Binding Path=ProjectNamespaces}" />
						</GroupBox>

						<GroupBox Header="Open in editor:" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" Style="{StaticResource GroupBoxContrastStyle}">

							<StackPanel>
								<Button Content="Manage OpenInEditor references" Command="{Binding Path=ManageOpenInEditorReferencesCommand}"
								        Margin="0,0,0,10" />
								<ListView ItemsSource="{Binding Path=OpenInEditorReferences}">
									<ListView.InputBindings>
										<KeyBinding Key="Delete" Command="{Binding RemoveOpenInEditorReferenceCommand}"
										            CommandParameter="{Binding Path=OpenInEditorReferences/}" />
									</ListView.InputBindings>
									<ListView.Template>
										<ControlTemplate>
											<ItemsPresenter/>
										</ControlTemplate>
									</ListView.Template>
									<ListView.ItemTemplate>
										<DataTemplate>
											<TextBlock Text="{Binding Path=.}" />
										</DataTemplate>
									</ListView.ItemTemplate>
								</ListView>
							</StackPanel>
						</GroupBox>

						<GroupBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3" Header="Solution folders:" Style="{StaticResource GroupBoxContrastStyle}">
							<StackPanel>
								<StackPanel.Resources>
									<DataTemplate DataType="{x:Type viewModels:FolderViewModel}">
										<StackPanel>
											<DockPanel Margin="0,5,0,0">
												<Button Focusable="False" Content="x"
												        Command="{Binding ElementName=Self, Path=DataContext.RemoveHierarchyFolderCommand}"
												        CommandParameter="{Binding Path=.}"
												        IsEnabled="{Binding Path=IsRoot, Converter={StaticResource BooleanInversionConverter}}"
												        DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5,0,0,0" />
												<Button Focusable="False" Content="+project" Command="{Binding Path=NewFileCommand}" DockPanel.Dock="Right"
												        VerticalAlignment="Center" Margin="5,0,0,0" />
												<Button Focusable="False" Content="+folder" Command="{Binding Path=NewFolderCommand}"
												        DockPanel.Dock="Right" VerticalAlignment="Center" Margin="5,0,0,0" />
												<StackPanel VerticalAlignment="Center">
													<TextBox
														Visibility="{Binding Path=IsRoot, Converter={StaticResource EnhancedBooleanToVisibilityConverter}, ConverterParameter={utility:SystemType Bool=True}}"
														mah:TextBoxHelper.Watermark="Foldername:"
														Text="{Binding Path=FolderName, UpdateSourceTrigger=PropertyChanged}" />
													<TextBlock
														Visibility="{Binding Path=IsRoot, Converter={StaticResource EnhancedBooleanToVisibilityConverter}}"
														Text="{Binding Path=FolderName}" />
												</StackPanel>
											</DockPanel>
											<ItemsControl
												Focusable="False"
												ItemsSource="{Binding Path=Items}"
												Margin="20,0,0,0" />
										</StackPanel>
									</DataTemplate>
									<DataTemplate DataType="{x:Type viewModels:ProjectViewModel}">
										<DockPanel Margin="0,5,0,0">
											<Button
												DockPanel.Dock="Right"
												Focusable="False"
												HorizontalAlignment="Right"
												Content="x"
												VerticalAlignment="Center"
												Command="{Binding ElementName=Self, Path=DataContext.RemoveHierarchyFolderCommand}"
												CommandParameter="{Binding Path=.}" />
											<ComboBox Margin="0,0,5,0" HorizontalAlignment="Stretch"
											          ItemsSource="{Binding ElementName=Self, Path=DataContext.ProjectNamespaces}"
											          SelectedValue="{Binding Path=Namespace}" />
										</DockPanel>
									</DataTemplate>
								</StackPanel.Resources>
								<ContentPresenter Content="{Binding Path=TemplateHierarchy}" />
							</StackPanel>
						</GroupBox>
					</Grid>
				</GroupBox>
			</StackPanel>
		</ScrollViewer>
	</DockPanel>
</mah:MetroWindow>